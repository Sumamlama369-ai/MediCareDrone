package com.medicaredrone.view;

import com.medicaredrone.controller.ValidationUtil;
import com.medicaredrone.model.DroneModel;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.medicaredrone.controller.datastructure.CustomQueue;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;


/**
 *
 * @author suman lama
 */
public class MediCareDrone extends javax.swing.JFrame {

    private List<DroneModel> droneList;
    private java.awt.CardLayout cardLayout;

    /**
     * Creates new form CollegeApp
     */
    public MediCareDrone() {
        
        setLocation(200,100);
        setResizable(false);
        initComponents();
        initializeLayout(); // Set up CardLayout and add screens
        initializeData(); // Initialize student data and table
        startProgress();// Show loading screen and initiate progress
        
        
        
        // Set custom icon with resized dimensions
        try {
            ImageIcon icon = new ImageIcon(this.getClass().getResource("/com/collegeapp/resources/logo.png"));
            Image scaledIcon = icon.getImage().getScaledInstance(150, 150, Image.SCALE_SMOOTH); // Resize to 64x64
            this.setIconImage(scaledIcon);
        } catch (Exception e) {
            System.err.println("Icon image not found: " + e.getMessage());
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainScreen = new javax.swing.JPanel();
        pnlMainBar = new javax.swing.JPanel();
        lblMainSubTitle = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        lblDroneLogo = new javax.swing.JLabel();
        lblMainTitle = new javax.swing.JLabel();
        lblMainSubTitle1 = new javax.swing.JLabel();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHome = new javax.swing.JPanel();
        lblHomeTitle = new javax.swing.JLabel();
        lblMainKeyPoints = new javax.swing.JLabel();
        lblHomeSubtitle1 = new javax.swing.JLabel();
        btnHomeExplore = new javax.swing.JButton();
        lblHomeBgImage = new javax.swing.JLabel();
        pnlStudentList = new javax.swing.JPanel();
        spTblStudent = new javax.swing.JScrollPane();
        tblDrone = new javax.swing.JTable();
        lblTblStudentTitle = new javax.swing.JLabel();
        pnlButton1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnSupply = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        txtRequesterName = new javax.swing.JTextField();
        txtItemName = new javax.swing.JTextField();
        txtEmergencyContact = new javax.swing.JTextField();
        txtLocation = new javax.swing.JTextField();
        txtDroneId = new javax.swing.JTextField();
        txtLoadCapacity = new javax.swing.JTextField();
        lblErrorDroneId = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        cmbWeatherCondition = new javax.swing.JComboBox<>();
        lblErrorLocation = new javax.swing.JLabel();
        lblErrorEmergencyContact = new javax.swing.JLabel();
        lblErrorRequesterName = new javax.swing.JLabel();
        lblErrorItemName = new javax.swing.JLabel();
        lblErrorLoadCapacity = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();
        pnlAdminControl = new javax.swing.JPanel();
        pnlButton = new javax.swing.JPanel();
        VivaInfoAfter = new javax.swing.JLabel();
        lblAdminDashboard = new javax.swing.JLabel();
        VivaInfoBefore = new javax.swing.JLabel();
        btnLaunch = new javax.swing.JButton();
        lblDashboardImageUp = new javax.swing.JLabel();
        lblDashImage = new javax.swing.JLabel();
        formTitle = new javax.swing.JLabel();
        spTblStudentVivaList = new javax.swing.JScrollPane();
        tblStudentVivaList = new javax.swing.JTable();
        spTblStudentVivaList1 = new javax.swing.JScrollPane();
        tblStudentAfterVivaList = new javax.swing.JTable();
        pnlAboutUs = new javax.swing.JPanel();
        lblSumanImage = new javax.swing.JLabel();
        lblSumanDirector = new javax.swing.JLabel();
        pnlPhilosophy = new javax.swing.JPanel();
        lblOurPhilosophy = new javax.swing.JLabel();
        lblPhilosophy = new javax.swing.JLabel();
        lblQuardTitle = new javax.swing.JLabel();
        lblBatteryTitle = new javax.swing.JLabel();
        lblPropeller = new javax.swing.JLabel();
        lblMotorProtection = new javax.swing.JLabel();
        lblDroneBackground = new javax.swing.JLabel();
        lblBatterySubTitle = new javax.swing.JLabel();
        lblPropellerSubTitle = new javax.swing.JLabel();
        lblMotorProtectionSubTitle = new javax.swing.JLabel();
        lblMotorSubTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlVivaList = new javax.swing.JPanel();
        spTblStudentViva = new javax.swing.JScrollPane();
        tblVivaStudentAfterQueue = new javax.swing.JTable();
        spTblStudentViva1 = new javax.swing.JScrollPane();
        tblVivaStudentQueueList = new javax.swing.JTable();
        pnlLoginScreen = new javax.swing.JPanel();
        lblLoginTitle = new javax.swing.JLabel();
        txtFldLoginUsername = new javax.swing.JTextField();
        pwdFldLogin = new javax.swing.JPasswordField();
        lblLoginSubTitle = new javax.swing.JLabel();
        lblLoginForgotPwd = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        lblLoginError = new javax.swing.JLabel();
        lblSlogan = new javax.swing.JLabel();
        lblLoginBgImage = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashScreen = new javax.swing.JProgressBar(0,100);
        lblLoading = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblcollegelogo = new javax.swing.JLabel();
        lblLoadingBgImage = new javax.swing.JLabel();

        pnlMainScreen.setBackground(new java.awt.Color(120, 120, 120));
        pnlMainScreen.setMaximumSize(new java.awt.Dimension(1220, 750));
        pnlMainScreen.setMinimumSize(new java.awt.Dimension(1220, 750));
        pnlMainScreen.setPreferredSize(new java.awt.Dimension(1220, 750));
        pnlMainScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlMainBar.setBackground(new java.awt.Color(255, 255, 255));

        lblMainSubTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        lblMainSubTitle.setForeground(new java.awt.Color(26, 82, 117));
        lblMainSubTitle.setText("Medi-");

        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/lblLogOut.png"))); // NOI18N
        btnLogout.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblDroneLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/droneLogo.png"))); // NOI18N

        lblMainTitle.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        lblMainTitle.setForeground(new java.awt.Color(26, 82, 117));
        lblMainTitle.setText("Welcome to ");

        lblMainSubTitle1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        lblMainSubTitle1.setForeground(new java.awt.Color(25, 155, 216));
        lblMainSubTitle1.setText("DroneCare");

        javax.swing.GroupLayout pnlMainBarLayout = new javax.swing.GroupLayout(pnlMainBar);
        pnlMainBar.setLayout(pnlMainBarLayout);
        pnlMainBarLayout.setHorizontalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addComponent(lblDroneLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(lblMainTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMainSubTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMainSubTitle1)
                .addGap(429, 429, 429)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlMainBarLayout.setVerticalGroup(
            pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addComponent(lblDroneLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlMainBarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlMainBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMainSubTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMainSubTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(btnLogout, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pnlMainScreen.add(pnlMainBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1225, -1));

        tabPaneMain.setBackground(new java.awt.Color(120, 120, 120));
        tabPaneMain.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 255), 0, true));
        tabPaneMain.setForeground(new java.awt.Color(255, 255, 255));
        tabPaneMain.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        pnlHome.setBackground(new java.awt.Color(0, 0, 0));
        pnlHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblHomeTitle.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblHomeTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHomeTitle.setText("<html>Fast. Secure.<br>\nintelligent.</html>");
        pnlHome.add(lblHomeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 320, 123));

        lblMainKeyPoints.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMainKeyPoints.setForeground(new java.awt.Color(255, 255, 255));
        lblMainKeyPoints.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMainKeyPoints.setText("<html>  \n-> For Timely Healthcare Delivery &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -> For Life-Saving Technology  \n<br><br>  \n-> For Reliable Drone Operations &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-> For Smarter Medical Solutions  \n</html>");
        pnlHome.add(lblMainKeyPoints, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, 123));

        lblHomeSubtitle1.setFont(new java.awt.Font("Segoe UI Variable", 1, 18)); // NOI18N
        lblHomeSubtitle1.setForeground(new java.awt.Color(255, 255, 255));
        lblHomeSubtitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHomeSubtitle1.setText("Medical Drone Delivery");
        pnlHome.add(lblHomeSubtitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 230, 60));

        btnHomeExplore.setBackground(new java.awt.Color(0, 0, 0));
        btnHomeExplore.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/buttonImage.png"))); // NOI18N
        btnHomeExplore.setBorder(null);
        btnHomeExplore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeExploreActionPerformed(evt);
            }
        });
        pnlHome.add(btnHomeExplore, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 160, 40));

        lblHomeBgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/HomeBgImage.jpg"))); // NOI18N
        lblHomeBgImage.setText("jLabel1");
        pnlHome.add(lblHomeBgImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, 1110, 590));

        tabPaneMain.addTab("Home", pnlHome);

        pnlStudentList.setBackground(new java.awt.Color(255, 255, 255));

        tblDrone.setBackground(new java.awt.Color(153, 204, 255));
        tblDrone.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDrone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DroneID", "Status", "RequesterName", "ItemName", "Location", "EmergencyContact", "WeatherCondition", "LoadCapacity(kg)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDrone.setGridColor(new java.awt.Color(0, 0, 0));
        tblDrone.setPreferredSize(new java.awt.Dimension(340, 619));
        tblDrone.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblDrone.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblDrone.setShowGrid(true);
        tblDrone.getTableHeader().setReorderingAllowed(false);
        tblDrone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDroneMouseClicked(evt);
            }
        });
        spTblStudent.setViewportView(tblDrone);
        if (tblDrone.getColumnModel().getColumnCount() > 0) {
            tblDrone.getColumnModel().getColumn(0).setResizable(false);
            tblDrone.getColumnModel().getColumn(1).setResizable(false);
            tblDrone.getColumnModel().getColumn(2).setResizable(false);
            tblDrone.getColumnModel().getColumn(3).setResizable(false);
            tblDrone.getColumnModel().getColumn(4).setResizable(false);
            tblDrone.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        lblTblStudentTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblTblStudentTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTblStudentTitle.setForeground(new java.awt.Color(26, 82, 117));
        lblTblStudentTitle.setText("Comprehensive Drone Details and Deployment Information >>");

        btnAdd.setBackground(new java.awt.Color(0, 153, 255));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnRemove.setBackground(new java.awt.Color(255, 102, 102));
        btnRemove.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnRemove.setForeground(new java.awt.Color(255, 255, 255));
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnSupply.setBackground(new java.awt.Color(0, 153, 255));
        btnSupply.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSupply.setForeground(new java.awt.Color(255, 255, 255));
        btnSupply.setText("Supply");
        btnSupply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupplyActionPerformed(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(255, 102, 102));
        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnClear.setForeground(new java.awt.Color(255, 255, 255));
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 153, 255));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButton1Layout = new javax.swing.GroupLayout(pnlButton1);
        pnlButton1.setLayout(pnlButton1Layout);
        pnlButton1Layout.setHorizontalGroup(
            pnlButton1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButton1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlButton1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSupply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        pnlButton1Layout.setVerticalGroup(
            pnlButton1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButton1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSupply, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemove)
                .addGap(18, 18, 18)
                .addComponent(btnClear)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        txtRequesterName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "RequesterName", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        txtItemName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ItemName", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        txtEmergencyContact.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "EmergencyContact", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N
        txtEmergencyContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmergencyContactActionPerformed(evt);
            }
        });

        txtLocation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Location", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 83, 117))); // NOI18N

        txtDroneId.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DroneID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        txtLoadCapacity.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LoadCapacity(kg)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Completed", "Pending", "Failed" }));
        cmbStatus.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Status", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        cmbWeatherCondition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sunny", "Cloudy", "Rainy", "Snowy", "Foggy", "Windy" }));
        cmbWeatherCondition.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Weather Condition", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(26, 82, 117))); // NOI18N

        javax.swing.GroupLayout pnlStudentListLayout = new javax.swing.GroupLayout(pnlStudentList);
        pnlStudentList.setLayout(pnlStudentListLayout);
        pnlStudentListLayout.setHorizontalGroup(
            pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStudentListLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addComponent(pnlButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(lblErrorRequesterName, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(lblErrorItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblErrorDroneId, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addComponent(txtDroneId, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(txtRequesterName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(80, 80, 80)
                                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(97, 97, 97)
                                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbWeatherCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(88, 88, 88)
                                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtEmergencyContact, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtLoadCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorLoadCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                                        .addComponent(lblErrorLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblErrorEmergencyContact, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addGap(288, 288, 288)
                                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(spTblStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 1197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTblStudentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(8350, Short.MAX_VALUE))
        );
        pnlStudentListLayout.setVerticalGroup(
            pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlStudentListLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTblStudentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTblStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDroneId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmergencyContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblErrorEmergencyContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlStudentListLayout.createSequentialGroup()
                                .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblErrorDroneId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtRequesterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbWeatherCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtLoadCapacity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorRequesterName, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                .addComponent(lblErrorItemName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblErrorLoadCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))
                    .addGroup(pnlStudentListLayout.createSequentialGroup()
                        .addComponent(pnlButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))))
        );

        tabPaneMain.addTab("Dashboard", pnlStudentList);

        pnlAdminControl.setBackground(new java.awt.Color(255, 255, 255));
        pnlAdminControl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));

        VivaInfoAfter.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        VivaInfoAfter.setForeground(new java.awt.Color(26, 82, 117));
        VivaInfoAfter.setText("Completed Deployment>>");

        lblAdminDashboard.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAdminDashboard.setForeground(new java.awt.Color(26, 155, 216));
        lblAdminDashboard.setText("Execution Dashboard");

        VivaInfoBefore.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        VivaInfoBefore.setForeground(new java.awt.Color(26, 82, 117));
        VivaInfoBefore.setText("Pending Deployment>>");

        btnLaunch.setBackground(new java.awt.Color(0, 204, 255));
        btnLaunch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLaunch.setForeground(new java.awt.Color(255, 255, 255));
        btnLaunch.setText("Launch");
        btnLaunch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLaunchActionPerformed(evt);
            }
        });

        lblDashboardImageUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/dashImg1 (1).png"))); // NOI18N

        lblDashImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/dashImg2 (1).png"))); // NOI18N

        javax.swing.GroupLayout pnlButtonLayout = new javax.swing.GroupLayout(pnlButton);
        pnlButton.setLayout(pnlButtonLayout);
        pnlButtonLayout.setHorizontalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblAdminDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlButtonLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(VivaInfoAfter))
                    .addGroup(pnlButtonLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VivaInfoBefore)
                            .addGroup(pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnLaunch, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlButtonLayout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addComponent(lblDashboardImageUp, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblDashImage, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlButtonLayout.setVerticalGroup(
            pnlButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblAdminDashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VivaInfoBefore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDashboardImageUp, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLaunch, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VivaInfoAfter)
                .addGap(18, 18, 18)
                .addComponent(lblDashImage, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        formTitle.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        formTitle.setForeground(new java.awt.Color(255, 102, 102));
        formTitle.setText("-- Drone Deployment List--");

        tblStudentVivaList.setBackground(new java.awt.Color(153, 204, 255));
        tblStudentVivaList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblStudentVivaList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DroneID", "Status", "RequesterName", "ItemName", "Location", "EmergencyContact", "WeatherCondition", "LoadCapacity(kg)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudentVivaList.setGridColor(new java.awt.Color(0, 0, 0));
        tblStudentVivaList.setPreferredSize(new java.awt.Dimension(340, 619));
        tblStudentVivaList.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblStudentVivaList.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblStudentVivaList.setShowGrid(true);
        tblStudentVivaList.getTableHeader().setReorderingAllowed(false);
        spTblStudentVivaList.setViewportView(tblStudentVivaList);

        tblStudentAfterVivaList.setBackground(new java.awt.Color(153, 204, 255));
        tblStudentAfterVivaList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblStudentAfterVivaList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DroneID", "Status", "RequesterName", "ItemName", "Location", "EmergencyContact", "WeatherCondition", "LoadCapacity(kg)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudentAfterVivaList.setGridColor(new java.awt.Color(0, 0, 0));
        tblStudentAfterVivaList.setPreferredSize(new java.awt.Dimension(340, 619));
        tblStudentAfterVivaList.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblStudentAfterVivaList.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblStudentAfterVivaList.setShowGrid(true);
        tblStudentAfterVivaList.getTableHeader().setReorderingAllowed(false);
        spTblStudentVivaList1.setViewportView(tblStudentAfterVivaList);
        if (tblStudentAfterVivaList.getColumnModel().getColumnCount() > 0) {
            tblStudentAfterVivaList.getColumnModel().getColumn(0).setResizable(false);
            tblStudentAfterVivaList.getColumnModel().getColumn(1).setResizable(false);
            tblStudentAfterVivaList.getColumnModel().getColumn(2).setResizable(false);
            tblStudentAfterVivaList.getColumnModel().getColumn(3).setResizable(false);
            tblStudentAfterVivaList.getColumnModel().getColumn(4).setResizable(false);
            tblStudentAfterVivaList.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        javax.swing.GroupLayout pnlAdminControlLayout = new javax.swing.GroupLayout(pnlAdminControl);
        pnlAdminControl.setLayout(pnlAdminControlLayout);
        pnlAdminControlLayout.setHorizontalGroup(
            pnlAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminControlLayout.createSequentialGroup()
                .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminControlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spTblStudentVivaList1, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spTblStudentVivaList, javax.swing.GroupLayout.PREFERRED_SIZE, 901, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAdminControlLayout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(formTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8429, Short.MAX_VALUE))
        );
        pnlAdminControlLayout.setVerticalGroup(
            pnlAdminControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(formTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTblStudentVivaList, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spTblStudentVivaList1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlAdminControlLayout.createSequentialGroup()
                .addComponent(pnlButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        tabPaneMain.addTab("Launch View", pnlAdminControl);

        pnlAboutUs.setBackground(new java.awt.Color(255, 255, 255));
        pnlAboutUs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(234, 192, 32)));
        pnlAboutUs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSumanImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/sumanDirector.png"))); // NOI18N
        lblSumanImage.setText("jLabel1");
        pnlAboutUs.add(lblSumanImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 189, 160));

        lblSumanDirector.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblSumanDirector.setForeground(new java.awt.Color(51, 51, 51));
        lblSumanDirector.setText("Suman Lama (Director)");
        pnlAboutUs.add(lblSumanDirector, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 180, -1));

        lblOurPhilosophy.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblOurPhilosophy.setText("Our Philosophy");

        lblPhilosophy.setFont(new java.awt.Font("Segoe UI", 0, 17)); // NOI18N
        lblPhilosophy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhilosophy.setText("<html>At MediDroneCare, we use innovative drone technology to deliver life-saving medical supplies \nto those in urgent need, no matter the location or situation. Our focus is on efficiency, compassion, and\n overcoming logistical barriers to ensure that remote and disaster-stricken areas are never left behind..</html>");

        javax.swing.GroupLayout pnlPhilosophyLayout = new javax.swing.GroupLayout(pnlPhilosophy);
        pnlPhilosophy.setLayout(pnlPhilosophyLayout);
        pnlPhilosophyLayout.setHorizontalGroup(
            pnlPhilosophyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhilosophyLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlPhilosophyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblOurPhilosophy, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPhilosophy, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlPhilosophyLayout.setVerticalGroup(
            pnlPhilosophyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPhilosophyLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblOurPhilosophy, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPhilosophy, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlAboutUs.add(pnlPhilosophy, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        lblQuardTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblQuardTitle.setForeground(new java.awt.Color(153, 153, 153));
        lblQuardTitle.setText("A New Era of QuardCopters");
        pnlAboutUs.add(lblQuardTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, 330, 30));

        lblBatteryTitle.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblBatteryTitle.setText("Battery");
        pnlAboutUs.add(lblBatteryTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 230, 100, 20));

        lblPropeller.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPropeller.setText("Propeller");
        pnlAboutUs.add(lblPropeller, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 310, 90, 20));

        lblMotorProtection.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMotorProtection.setText("Motor Protection Cover");
        pnlAboutUs.add(lblMotorProtection, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 380, 150, -1));

        lblDroneBackground.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblDroneBackground.setText("Motor");
        pnlAboutUs.add(lblDroneBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 460, 120, 20));

        lblBatterySubTitle.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblBatterySubTitle.setText("<html>A high-capacity battery that allows the quardcopter to stay in the air for more than 6 hours</html>");
        pnlAboutUs.add(lblBatterySubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 240, 290, 60));

        lblPropellerSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblPropellerSubTitle.setText("<html>A special shaped propeller that reduces battery consumption.</html>");
        pnlAboutUs.add(lblPropellerSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 330, 260, 30));

        lblMotorProtectionSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblMotorProtectionSubTitle.setText("<html>Formidable and durable composite housing protects the propeller and motor.</html>");
        pnlAboutUs.add(lblMotorProtectionSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 400, 270, 40));

        lblMotorSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lblMotorSubTitle.setText("<html>The latest motor provides stable traction at any speed.</html>");
        pnlAboutUs.add(lblMotorSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 480, 280, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/droneBack.png"))); // NOI18N
        pnlAboutUs.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 680, 520));

        tabPaneMain.addTab("About Us", pnlAboutUs);

        tblVivaStudentAfterQueue.setBackground(new java.awt.Color(153, 204, 255));
        tblVivaStudentAfterQueue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblVivaStudentAfterQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LMU ID", "Full Name", "Program", "Contact", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVivaStudentAfterQueue.setGridColor(new java.awt.Color(0, 0, 0));
        tblVivaStudentAfterQueue.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblVivaStudentAfterQueue.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblVivaStudentAfterQueue.setShowGrid(true);
        tblVivaStudentAfterQueue.getTableHeader().setReorderingAllowed(false);
        spTblStudentViva.setViewportView(tblVivaStudentAfterQueue);
        if (tblVivaStudentAfterQueue.getColumnModel().getColumnCount() > 0) {
            tblVivaStudentAfterQueue.getColumnModel().getColumn(0).setResizable(false);
            tblVivaStudentAfterQueue.getColumnModel().getColumn(1).setResizable(false);
            tblVivaStudentAfterQueue.getColumnModel().getColumn(2).setResizable(false);
            tblVivaStudentAfterQueue.getColumnModel().getColumn(3).setResizable(false);
            tblVivaStudentAfterQueue.getColumnModel().getColumn(4).setResizable(false);
            tblVivaStudentAfterQueue.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        tblVivaStudentQueueList.setBackground(new java.awt.Color(153, 204, 255));
        tblVivaStudentQueueList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblVivaStudentQueueList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LMU ID", "Full Name", "Program", "Contact", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblVivaStudentQueueList.setGridColor(new java.awt.Color(0, 0, 0));
        tblVivaStudentQueueList.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tblVivaStudentQueueList.setSelectionForeground(new java.awt.Color(234, 192, 32));
        tblVivaStudentQueueList.setShowGrid(true);
        tblVivaStudentQueueList.getTableHeader().setReorderingAllowed(false);
        spTblStudentViva1.setViewportView(tblVivaStudentQueueList);
        if (tblVivaStudentQueueList.getColumnModel().getColumnCount() > 0) {
            tblVivaStudentQueueList.getColumnModel().getColumn(0).setResizable(false);
            tblVivaStudentQueueList.getColumnModel().getColumn(1).setResizable(false);
            tblVivaStudentQueueList.getColumnModel().getColumn(2).setResizable(false);
            tblVivaStudentQueueList.getColumnModel().getColumn(3).setResizable(false);
            tblVivaStudentQueueList.getColumnModel().getColumn(4).setResizable(false);
            tblVivaStudentQueueList.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        javax.swing.GroupLayout pnlVivaListLayout = new javax.swing.GroupLayout(pnlVivaList);
        pnlVivaList.setLayout(pnlVivaListLayout);
        pnlVivaListLayout.setHorizontalGroup(
            pnlVivaListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVivaListLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlVivaListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spTblStudentViva, javax.swing.GroupLayout.DEFAULT_SIZE, 1048, Short.MAX_VALUE)
                    .addComponent(spTblStudentViva1))
                .addContainerGap(8487, Short.MAX_VALUE))
        );
        pnlVivaListLayout.setVerticalGroup(
            pnlVivaListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVivaListLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(spTblStudentViva1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                .addComponent(spTblStudentViva, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tabPaneMain.addTab("Drone List", pnlVivaList);

        pnlMainScreen.add(tabPaneMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 80, -1, 670));

        pnlLoginScreen.setBackground(new java.awt.Color(236, 237, 239));
        pnlLoginScreen.setMaximumSize(new java.awt.Dimension(1220, 750));
        pnlLoginScreen.setMinimumSize(new java.awt.Dimension(1220, 750));
        pnlLoginScreen.setPreferredSize(new java.awt.Dimension(1220, 750));
        pnlLoginScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblLoginTitle.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblLoginTitle.setForeground(new java.awt.Color(102, 204, 255));
        lblLoginTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginTitle.setText("Sign in to MediCareDrone");
        pnlLoginScreen.add(lblLoginTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(643, 110, 420, 53));

        txtFldLoginUsername.setForeground(new java.awt.Color(102, 102, 102));
        txtFldLoginUsername.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "Username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        txtFldLoginUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldLoginUsernameActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(txtFldLoginUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 230, 262, 59));

        pwdFldLogin.setForeground(new java.awt.Color(102, 102, 102));
        pwdFldLogin.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2), "Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pwdFldLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdFldLoginActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(pwdFldLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 310, 262, 59));

        lblLoginSubTitle.setBackground(new java.awt.Color(234, 192, 32));
        lblLoginSubTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblLoginSubTitle.setForeground(new java.awt.Color(153, 204, 255));
        lblLoginSubTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginSubTitle.setText("Please enter your login details below using this app.");
        pnlLoginScreen.add(lblLoginSubTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, 452, -1));

        lblLoginForgotPwd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginForgotPwd.setForeground(new java.awt.Color(153, 153, 153));
        lblLoginForgotPwd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoginForgotPwd.setText("Forgot your password?");
        pnlLoginScreen.add(lblLoginForgotPwd, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 480, 229, -1));

        btnLogin.setBackground(new java.awt.Color(102, 204, 255));
        btnLogin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        pnlLoginScreen.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 410, 260, 50));

        lblLoginError.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblLoginError.setForeground(new java.awt.Color(255, 0, 0));
        lblLoginError.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pnlLoginScreen.add(lblLoginError, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 380, 410, 22));

        lblSlogan.setBackground(new java.awt.Color(255, 255, 255));
        lblSlogan.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        lblSlogan.setForeground(new java.awt.Color(255, 255, 255));
        lblSlogan.setText("<html>Your health, our mission. <br>Let's soar together toward a better tomorrow.</html>");
        pnlLoginScreen.add(lblSlogan, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 460, 380, 70));

        lblLoginBgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/loginBgimage.png"))); // NOI18N
        pnlLoginScreen.add(lblLoginBgImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 1050, 730));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1220, 750));
        setSize(new java.awt.Dimension(1220, 750));

        pnlLoadingScreen.setBackground(new java.awt.Color(204, 204, 204));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1220, 750));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1220, 750));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1220, 750));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pgBarSplashScreen.setStringPainted(true);
        pgBarSplashScreen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        pgBarSplashScreen.setForeground(new java.awt.Color(0, 153, 0));
        pgBarSplashScreen.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pnlLoadingScreen.add(pgBarSplashScreen, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 520, 870, 31));

        lblLoading.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblLoading.setForeground(new java.awt.Color(255, 255, 255));
        lblLoading.setText("Loading...");
        pnlLoadingScreen.add(lblLoading, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 560, 100, -1));

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 102));
        lblTitle.setText("\"Delivering Hope and Healing, Powered by the Wings of Innovation\"");
        pnlLoadingScreen.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 600, -1));

        lblcollegelogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/Screenshot 2024-12-09 032557.png"))); // NOI18N
        pnlLoadingScreen.add(lblcollegelogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 210, -1));

        lblLoadingBgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/collegeapp/resources/loadingBg1.jpg"))); // NOI18N
        lblLoadingBgImage.setText(" ");
        pnlLoadingScreen.add(lblLoadingBgImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -40, 1220, 770));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
// Method to set up the CardLayout and add panels

    private void initializeLayout() {
        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLoginScreen, "LoginScreen");
        getContentPane().add(pnlMainScreen, "MainScreen");

        // Start with the loading screen
        cardLayout.show(getContentPane(), "LoadingScreen");
    }

    // Method to initialize data, including student list and table
    private void initializeData() {
        droneList = new LinkedList<>();

    // Create a table model with updated column names
    DefaultTableModel model = new DefaultTableModel(
        new Object[][]{}, // No initial data
        new String[]{ // Updated column names
            "Drone ID", "Status", "RequesterName", 
            "ItemName", "Location", "EmergencyContact", 
            "WeatherCondition", "LoadCapacity(kg)"
        }
    );
    tblDrone.setModel(model);

    // Example data for the updated table
    registerDrone(new DroneModel(23092873, "Active", "John Doe", "First Aid Kit", 
        "Kathmandu Nepal", "9876938467", "Sunny", 5.5));
    registerDrone(new DroneModel(23048593, "Deployed", "Jane Smith", "Medicine", 
        "Pokhara Nepal", "9873673826", "Rainy", 10.0));
    }
    
    // Method to simulate loading progress
    private void startProgress() {
        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashScreen.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute();
    }

    // Method to add student data and populate the table
    private void registerDrone(DroneModel student) {
        droneList.add(student);
        DefaultTableModel model = (DefaultTableModel) tblDrone.getModel();
        model.addRow(new Object[]{
            student.getDroneId(), student.getStatus(), student.getRequesterName(), 
            student.getItemName(), student.getLocation(), student.getEmergencyContact(), 
            student.getWeatherCondition(), student.getLoadCapacity()
        });
    }
    
    
    // Method to switch screens
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    //Action event for Login button
    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // Get the username and password input
        String username = txtFldLoginUsername.getText();
        String password = new String(pwdFldLogin.getPassword());

        // Check if username or password is empty
        if (username.isEmpty() || password.isEmpty()) {
            lblLoginError.setText("Please enter your username and password.");
        } // Check if username and password are incorrect
        else if (!username.equals("admin") || !password.equals("admin")) {
            lblLoginError.setText("Username and password mismatch.");
        } // If credentials are correct, proceed to load the main screen
        else {
            lblLoginError.setText(""); // Clear any previous error messages
            loadScreen("MainScreen"); // Load the main screen
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    
    //Action event for Logout button
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        pwdFldLogin.setText("");
        txtFldLoginUsername.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void pwdFldLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdFldLoginActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdFldLoginActionPerformed

    
    
    
    
    
    
    
    private void txtFldLoginUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldLoginUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldLoginUsernameActionPerformed

    private void btnSupplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupplyActionPerformed
        // TODO add your handling code here:
        // Get the table models for tblDrone and tblDroneInspectionList
        lblErrorDroneId.setText("");
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to transfer data to the Inspection List?", 
            "Confirm Action", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
    
    // If user selects 'Yes' (response = JOptionPane.YES_OPTION)
    if (response == JOptionPane.YES_OPTION) {
        
    
    DefaultTableModel droneModel = (DefaultTableModel) tblDrone.getModel();
    DefaultTableModel inspectionModel = (DefaultTableModel) tblStudentVivaList.getModel();

    // Clear existing rows in tblDroneInspectionList to avoid duplicates
    inspectionModel.setRowCount(0);

    // Loop through rows in tblDrone and copy to tblDroneInspectionList
    for (int i = 0; i < droneModel.getRowCount(); i++) {
        Object[] rowData = new Object[droneModel.getColumnCount()];
        for (int j = 0; j < droneModel.getColumnCount(); j++) {
            rowData[j] = droneModel.getValueAt(i, j); // Copy cell data
        }
        inspectionModel.addRow(rowData); // Add the row to tblDroneInspectionList
        
        // Create a DroneModel object and enqueue to inspectQueue
        DroneModel drone = new DroneModel(
            (int) droneModel.getValueAt(i, 0),
            (String) droneModel.getValueAt(i, 1),
            (String) droneModel.getValueAt(i, 2),
            (String) droneModel.getValueAt(i, 3),
            (String) droneModel.getValueAt(i, 4),
            (String) droneModel.getValueAt(i, 5),
            (String) droneModel.getValueAt(i, 6),
            (double) droneModel.getValueAt(i, 7)
        );
        vivaQueue.enQueue(drone);  // Enqueue the drone to the queue
    }

    // Show a confirmation dialog to the user
    lblErrorDroneId.setText("Data successfully transferred to Inspection List!");
    lblErrorDroneId.setForeground(Color.BLUE); // Set error color to blue
    }else {
        // If the user selects 'No', no functionality is performed
        JOptionPane.showMessageDialog(this, "Action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnSupplyActionPerformed

    
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        // Show confirmation dialog
    lblErrorDroneId.setText("");
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to remove this drone?", 
            "Confirm Action", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
    
    // If user selects 'Yes'
    if (response == JOptionPane.YES_OPTION) {
        int selectedRow = tblDrone.getSelectedRow(); // Get selected row
        
        if (selectedRow != -1) { // Check if a row is selected
            // Remove data from the studentList
            droneList.remove(selectedRow);

            // Remove data from the table
            DefaultTableModel model = (DefaultTableModel) tblDrone.getModel();
            model.removeRow(selectedRow);

            lblErrorDroneId.setText("Drone removed successfully.");
            lblErrorDroneId.setForeground(Color.BLUE);
        } else {
            lblErrorDroneId.setText("No drone selected for removal!");
            lblErrorDroneId.setForeground(Color.RED);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    
    
    private boolean isDroneIdExists(int droneId) {
    // Replace 'droneList' with the actual list or database storing drone data
    for (DroneModel drone : droneList) { 
        if (drone.getDroneId() == droneId) {
            return true; // Drone ID already exists
        }
    }
    return false; // Drone ID is unique
    }

    
    
        
private void highlightInvalidField(JTextField textField, String title, Color color) {
    // Create titled border
    TitledBorder titledBorder = BorderFactory.createTitledBorder(
        BorderFactory.createLineBorder(color, 1), // Border with desired color
        title,
        TitledBorder.DEFAULT_JUSTIFICATION,
        TitledBorder.TOP, // Position the title at the top
        new Font("Segoe UI", Font.BOLD, 14), // Made font bold and size 14 to match resetFieldBorderWithTitle
        color
    );
    
    // Set border padding
    Border padding = BorderFactory.createEmptyBorder(2, 5, 2, 5);
    
    // Combine borders
    textField.setBorder(BorderFactory.createCompoundBorder(titledBorder, padding));
    
    // Set size
    textField.setPreferredSize(new Dimension(150, 45));
    
    // Prevent layout issues
    textField.revalidate();
    textField.repaint();
}

    
    
private void resetFieldBorderWithTitle(JTextField textField, String title) {
    // Create titled border
    TitledBorder titledBorder = BorderFactory.createTitledBorder(
        BorderFactory.createLineBorder(new Color(140,140,140), 1), // Border color
        title,
        TitledBorder.DEFAULT_JUSTIFICATION,
        TitledBorder.TOP, // Position the title at the top
        new Font("Segoe UI", Font.BOLD, 14), // Changed to plain font, smaller size
        new Color(26, 82, 117) // Title color matches border color
    );
    
    // Set border padding
    Border padding = BorderFactory.createEmptyBorder(2, 5, 2, 5);
    
    // Combine borders
    textField.setBorder(BorderFactory.createCompoundBorder(titledBorder, padding));
    
    // Set size
    textField.setPreferredSize(new Dimension(150, 45));
    
    // Refresh the component
    textField.revalidate();
    textField.repaint();
}
    
    
   
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        
        // Show confirmation dialog
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to proceed?", 
            "Confirm Action", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);

    // If user selects 'Yes'
    if (response == JOptionPane.YES_OPTION) {
        // Get input data
        String droneId = txtDroneId.getText(); 
        String status = cmbStatus.getSelectedItem().toString(); 
        String requesterName = txtRequesterName.getText(); 
        String itemName = txtItemName.getText(); 
        String location = txtLocation.getText(); 
        String emergencyContact = txtEmergencyContact.getText(); 
        String weatherCondition = cmbWeatherCondition.getSelectedItem().toString(); 
        String loadCapacity = txtLoadCapacity.getText(); 

        // Validation check
        boolean isValid = true; // Flag to check overall validation
        
        if (!ValidationUtil.isValidDroneId(droneId, lblErrorDroneId)) {
            isValid = false;
            highlightInvalidField(txtDroneId,"DroneID", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtDroneId, "DroneID");
            lblErrorDroneId.setText("");
        }

        
        if (!ValidationUtil.isValidRequesterName(requesterName, lblErrorRequesterName)) {
            isValid = false;
            highlightInvalidField(txtRequesterName,"RequesterName", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtRequesterName, "RequesterName");
            lblErrorRequesterName.setText("");
        }
        
        
        if (!ValidationUtil.isValidLocation(location, lblErrorLocation)) {
            isValid = false;
            highlightInvalidField(txtLocation,"Location", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtLocation, "Location");
            lblErrorLocation.setText("");
        }
        
        
        if (!ValidationUtil.isValidItemName(itemName, lblErrorItemName)) {
            isValid = false;
            highlightInvalidField(txtItemName,"ItemName", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtItemName, "ItemName");
            lblErrorItemName.setText("");
        }
        
        
        if (!ValidationUtil.isValidEmergencyContact(emergencyContact, lblErrorEmergencyContact)) {
            isValid = false;
            highlightInvalidField(txtEmergencyContact,"EmergencyContact", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtEmergencyContact, "EmergencyContact");
            lblErrorEmergencyContact.setText("");
        }
        
        
        
        if (!ValidationUtil.isValidLoadCapacity(loadCapacity, lblErrorLoadCapacity)) {
            isValid = false;
            highlightInvalidField(txtLoadCapacity,"LoadCapacity(kg)", Color.RED);

        }else {
            resetFieldBorderWithTitle(txtLoadCapacity, "LoadCapacity(kg)");
            lblErrorLoadCapacity.setText("");
        }
        
       //clear textfield
       
       
       
       
       
        

        if (isValid) {
            lblErrorDroneId.setText("");

            int droneIdValue = Integer.parseInt(droneId); // Convert droneId to int

            // Check if droneID already exists
            if (isDroneIdExists(droneIdValue)) { // Call the method to check duplicate IDs
                lblMessage.setText("DroneID "+ droneId +" already exists and cannot be added!");
                lblMessage.setForeground(Color.RED);

            } else {
                // Create a new DroneModel
                double loadCapacityValue = Double.parseDouble(loadCapacity);
                DroneModel drone = new DroneModel(droneIdValue, status, requesterName, itemName, location, emergencyContact, weatherCondition, loadCapacityValue);

                // Register the drone
                registerDrone(drone);

                lblMessage.setText("Your data has been successfully added.");
                lblMessage.setForeground(Color.BLUE);
            }
        } else {
            lblMessage.setText("Please enter valid data for all fields.");
            lblMessage.setForeground(Color.RED);
            //JOptionPane.showMessageDialog(this, "Please enter valid data for all fields.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnAddActionPerformed

    

    
    
    
    
    
    
    private final CustomQueue vivaQueue = new CustomQueue(100); // Assuming a capacity of 100.
    private void btnLaunchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLaunchActionPerformed
        // TODO add your handling code here:
        // Check if there are drones in the queue
        lblErrorDroneId.setText("");
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to launch the next drone?", 
            "Confirm Launch", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
    
    // If user selects 'Yes' (response = JOptionPane.YES_OPTION)
    if (response == JOptionPane.YES_OPTION) {
        
        
    if (!vivaQueue.isEmpty()) {
        // Dequeue the first drone from deployQueue
        DroneModel drone = vivaQueue.deQueue();

        // Add the drone to tblDroneAfterDeploymentList
        DefaultTableModel modelAfterDeployment = (DefaultTableModel) tblStudentAfterVivaList.getModel();
        modelAfterDeployment.addRow(new Object[]{
            drone.getDroneId(), drone.getStatus(), drone.getRequesterName(),
            drone.getItemName(), drone.getLocation(), drone.getEmergencyContact(),
            drone.getWeatherCondition(), drone.getLoadCapacity()
        });

        // Remove the first row from tblDroneInspectionList
        DefaultTableModel modelInspectionList = (DefaultTableModel) tblStudentVivaList.getModel();
        if (modelInspectionList.getRowCount() > 0) {
            modelInspectionList.removeRow(0); // Removes the first row from tblDroneInspectionList
        }
        
        lblErrorDroneId.setText("Drone has been successfully launched.");
        lblErrorDroneId.setForeground(Color.BLUE); // Set error color to blue
    } else {
        // If the queue is empty, show a message
        JOptionPane.showMessageDialog(this, "No more drones in the deployment queue.", "Queue Empty", JOptionPane.INFORMATION_MESSAGE);
    }
    }else {
        // If the user selects 'No', no functionality is performed
        JOptionPane.showMessageDialog(this, "Launch action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    
    }//GEN-LAST:event_btnLaunchActionPerformed

    
    private void txtEmergencyContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmergencyContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmergencyContactActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        // Clear all text fields
        lblErrorDroneId.setText("");
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to clear all fields?", 
            "Confirm Action", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
    
    // If user selects 'Yes' (response = JOptionPane.YES_OPTION)
    if (response == JOptionPane.YES_OPTION) {
        
        
        
    txtDroneId.setText("");
    txtLoadCapacity.setText("");
    txtItemName.setText("");
    cmbWeatherCondition.setSelectedIndex(0);
    txtLocation.setText("");
    txtEmergencyContact.setText("");
    txtRequesterName.setText("");
    cmbWeatherCondition.setSelectedIndex(0);
    
    // Show a success message
        lblMessage.setText("All fields have been cleared");
        lblMessage.setForeground(Color.BLUE);
    
    
    }else {
        // If the user selects 'No', no functionality is performed
        JOptionPane.showMessageDialog(this, "Action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnHomeExploreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeExploreActionPerformed
        // TODO add your handling code here:
        // Switch the currently selected tab to the pnlAboutUs panel
        tabPaneMain.setSelectedComponent(pnlAboutUs);
    }//GEN-LAST:event_btnHomeExploreActionPerformed

    private void tblDroneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDroneMouseClicked
        // TODO add your handling code here:
        tblDrone.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        tblDrone.setSelectionBackground(new Color(173, 216, 230)); // Light Blue color
        tblDrone.setSelectionForeground(Color.BLACK); // Black text for selection
        int selectedRow = tblDrone.getSelectedRow();
        if (selectedRow != -1) {
            txtDroneId.setText(tblDrone.getValueAt(selectedRow, 0).toString());
            cmbStatus.setSelectedItem(tblDrone.getValueAt(selectedRow, 1).toString()); // For JComboBox

            //txtStatus1.setText(tblStudent.getValueAt(selectedRow, 1).toString());
            txtRequesterName.setText(tblDrone.getValueAt(selectedRow, 2).toString());
            txtItemName.setText(tblDrone.getValueAt(selectedRow, 3).toString());
            txtLocation.setText(tblDrone.getValueAt(selectedRow, 4).toString());
            txtEmergencyContact.setText(tblDrone.getValueAt(selectedRow, 5).toString());
            cmbWeatherCondition.setSelectedItem(tblDrone.getValueAt(selectedRow, 6).toString());

            //txtWeatherCondition.setText(tblStudent.getValueAt(selectedRow, 6).toString());
            txtLoadCapacity.setText(tblDrone.getValueAt(selectedRow, 7).toString());
        }
    }
    });
    }//GEN-LAST:event_tblDroneMouseClicked

    
    
    
    private boolean isDroneIdExistsForUpdate(int droneId, int currentRow) {
    for (int i = 0; i < droneList.size(); i++) {
        if (i != currentRow && droneList.get(i).getDroneId() == droneId) { 
            return true; // Drone ID already exists in another row
        }
    }
    return false; // Drone ID is unique for update
    }

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        // Show confirmation dialog
    int response = JOptionPane.showConfirmDialog(this, 
            "Are you sure you want to update the selected drone's data?", 
            "Confirm Update", 
            JOptionPane.YES_NO_OPTION, 
            JOptionPane.QUESTION_MESSAGE);
    
    // If user selects 'Yes'
    if (response == JOptionPane.YES_OPTION) {
        int selectedRow = tblDrone.getSelectedRow();
        if (selectedRow != -1) {
            // Get updated values from text fields
            String droneId = txtDroneId.getText();
            String status = cmbStatus.getSelectedItem().toString(); 
            String requesterName = txtRequesterName.getText();
            String itemName = txtItemName.getText();
            String location = txtLocation.getText();
            String emergencyContact = txtEmergencyContact.getText();
            String weatherCondition = cmbWeatherCondition.getSelectedItem().toString(); 
            String loadCapacity = txtLoadCapacity.getText();

            // Validation check
            boolean isValid = true; // Flag to check overall validation

            if (!ValidationUtil.isValidDroneId(droneId, lblErrorDroneId)) {
                isValid = false;
                highlightInvalidField(txtDroneId, "DroneID", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtDroneId, "DroneID");
                lblErrorDroneId.setText("");
            }

            if (!ValidationUtil.isValidRequesterName(requesterName, lblErrorRequesterName)) {
                isValid = false;
                highlightInvalidField(txtRequesterName, "RequesterName", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtRequesterName, "RequesterName");
                lblErrorRequesterName.setText("");
            }

            if (!ValidationUtil.isValidLocation(location, lblErrorLocation)) {
                isValid = false;
                highlightInvalidField(txtLocation, "Location", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtLocation, "Location");
                lblErrorLocation.setText("");
            }

            if (!ValidationUtil.isValidItemName(itemName, lblErrorItemName)) {
                isValid = false;
                highlightInvalidField(txtItemName, "ItemName", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtItemName, "ItemName");
                lblErrorItemName.setText("");
            }

            if (!ValidationUtil.isValidEmergencyContact(emergencyContact, lblErrorEmergencyContact)) {
                isValid = false;
                highlightInvalidField(txtEmergencyContact, "EmergencyContact", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtEmergencyContact, "EmergencyContact");
                lblErrorEmergencyContact.setText("");
            }

            if (!ValidationUtil.isValidLoadCapacity(loadCapacity, lblErrorLoadCapacity)) {
                isValid = false;
                highlightInvalidField(txtLoadCapacity, "LoadCapacity(kg)", Color.RED);
            } else {
                resetFieldBorderWithTitle(txtLoadCapacity, "LoadCapacity(kg)");
                lblErrorLoadCapacity.setText("");
            }

            if (isValid) {
                lblErrorDroneId.setText("");

                int droneIdValue = Integer.parseInt(droneId);

                // Check if the updated Drone ID already exists, excluding the current row
                if (isDroneIdExistsForUpdate(droneIdValue, selectedRow)) {
                    lblMessage.setText("DroneID " + droneId + " already exists and cannot be updated!");
                    lblMessage.setForeground(Color.BLUE);
                } else {
                    // Update the table
                    tblDrone.setValueAt(droneId, selectedRow, 0);
                    tblDrone.setValueAt(cmbStatus.getSelectedItem().toString(), selectedRow, 1); 
                    tblDrone.setValueAt(requesterName, selectedRow, 2);
                    tblDrone.setValueAt(itemName, selectedRow, 3);
                    tblDrone.setValueAt(location, selectedRow, 4);
                    tblDrone.setValueAt(emergencyContact, selectedRow, 5);
                    tblDrone.setValueAt(cmbWeatherCondition.getSelectedItem().toString(), selectedRow, 6);
                    tblDrone.setValueAt(loadCapacity, selectedRow, 7);

                    // Update the student list (or database)
                    DroneModel updatedStudent = new DroneModel(
                        Integer.parseInt(droneId),
                        status,
                        requesterName,
                        itemName,
                        location,
                        emergencyContact,
                        weatherCondition,
                        Double.parseDouble(loadCapacity)
                    );
                    droneList.set(selectedRow, updatedStudent); // Update in-memory list

                    // Show a success message
                    lblMessage.setText("Data successfully updated!");
                    lblMessage.setForeground(Color.BLUE);
                }
            } else {
                // If validation fails, show an error message
                lblMessage.setText("Invalid data! Please check inputs.");
                lblMessage.setForeground(Color.RED);
                //JOptionPane.showMessageDialog(this, "Invalid data! Please check inputs.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // If no row is selected, show an error message
            lblMessage.setText("No row selected to update!");
            lblMessage.setForeground(Color.RED);
            //JOptionPane.showMessageDialog(this, "No row selected to update!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    } else {
        // If the user selects 'No', no functionality is performed
        JOptionPane.showMessageDialog(this, "Update action cancelled.", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MediCareDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MediCareDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MediCareDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MediCareDrone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        MediCareDrone app = new MediCareDrone();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            app.setVisible(true);
        });
        System.out.println("College App Started");
        app.startProgress();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel VivaInfoAfter;
    private javax.swing.JLabel VivaInfoBefore;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHomeExplore;
    private javax.swing.JButton btnLaunch;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSupply;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JComboBox<String> cmbWeatherCondition;
    private javax.swing.JLabel formTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAdminDashboard;
    private javax.swing.JLabel lblBatterySubTitle;
    private javax.swing.JLabel lblBatteryTitle;
    private javax.swing.JLabel lblDashImage;
    private javax.swing.JLabel lblDashboardImageUp;
    private javax.swing.JLabel lblDroneBackground;
    private javax.swing.JLabel lblDroneLogo;
    private javax.swing.JLabel lblErrorDroneId;
    private javax.swing.JLabel lblErrorEmergencyContact;
    private javax.swing.JLabel lblErrorItemName;
    private javax.swing.JLabel lblErrorLoadCapacity;
    private javax.swing.JLabel lblErrorLocation;
    private javax.swing.JLabel lblErrorRequesterName;
    private javax.swing.JLabel lblHomeBgImage;
    private javax.swing.JLabel lblHomeSubtitle1;
    private javax.swing.JLabel lblHomeTitle;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingBgImage;
    private javax.swing.JLabel lblLoginBgImage;
    private javax.swing.JLabel lblLoginError;
    private javax.swing.JLabel lblLoginForgotPwd;
    private javax.swing.JLabel lblLoginSubTitle;
    private javax.swing.JLabel lblLoginTitle;
    private javax.swing.JLabel lblMainKeyPoints;
    private javax.swing.JLabel lblMainSubTitle;
    private javax.swing.JLabel lblMainSubTitle1;
    private javax.swing.JLabel lblMainTitle;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblMotorProtection;
    private javax.swing.JLabel lblMotorProtectionSubTitle;
    private javax.swing.JLabel lblMotorSubTitle;
    private javax.swing.JLabel lblOurPhilosophy;
    private javax.swing.JLabel lblPhilosophy;
    private javax.swing.JLabel lblPropeller;
    private javax.swing.JLabel lblPropellerSubTitle;
    private javax.swing.JLabel lblQuardTitle;
    private javax.swing.JLabel lblSlogan;
    private javax.swing.JLabel lblSumanDirector;
    private javax.swing.JLabel lblSumanImage;
    private javax.swing.JLabel lblTblStudentTitle;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblcollegelogo;
    private javax.swing.JProgressBar pgBarSplashScreen;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlAdminControl;
    private javax.swing.JPanel pnlButton;
    private javax.swing.JPanel pnlButton1;
    private javax.swing.JPanel pnlHome;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLoginScreen;
    private javax.swing.JPanel pnlMainBar;
    private javax.swing.JPanel pnlMainScreen;
    private javax.swing.JPanel pnlPhilosophy;
    private javax.swing.JPanel pnlStudentList;
    private javax.swing.JPanel pnlVivaList;
    private javax.swing.JPasswordField pwdFldLogin;
    private javax.swing.JScrollPane spTblStudent;
    private javax.swing.JScrollPane spTblStudentViva;
    private javax.swing.JScrollPane spTblStudentViva1;
    private javax.swing.JScrollPane spTblStudentVivaList;
    private javax.swing.JScrollPane spTblStudentVivaList1;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tblDrone;
    private javax.swing.JTable tblStudentAfterVivaList;
    private javax.swing.JTable tblStudentVivaList;
    private javax.swing.JTable tblVivaStudentAfterQueue;
    private javax.swing.JTable tblVivaStudentQueueList;
    private javax.swing.JTextField txtDroneId;
    private javax.swing.JTextField txtEmergencyContact;
    private javax.swing.JTextField txtFldLoginUsername;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtLoadCapacity;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtRequesterName;
    // End of variables declaration//GEN-END:variables
}
